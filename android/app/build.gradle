def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.huawei.agconnect'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
   def keystoreProperties = new Properties()
   def keystorePropertiesFile = rootProject.file('key.properties')
   if (keystorePropertiesFile.exists()) {
       keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
   }
android {
    ndkVersion "25.0.8775105" 
    compileSdkVersion 33

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.kroon.kiosk"
         minSdkVersion 21
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }
    
    signingConfigs {
       release {
            keyAlias keystoreProperties['keyAlias']
           keyPassword keystoreProperties['keyPassword']
           storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
           storePassword keystoreProperties['storePassword']
       }

    buildTypes {
          debug {  
            // useProguard true   
            minifyEnabled true
            shrinkResources true       
            signingConfig signingConfigs.release      
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
  
       }      
        release {
        
             signingConfig signingConfigs.release

            ndk {
               
                debugSymbolLevel 'SYMBOL_TABLE'
            }
        }
    }
    
}
    lintOptions {
            checkReleaseBuilds false
            abortOnError false
        }
}

flutter {
    source '../..'
}

repositories {
    flatDir {
        dirs 'libs'
    }
}



dependencies {
    implementation(name: 'PayLib-release-1.4.57', ext: 'aar')
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation platform('com.google.firebase:firebase-bom:30.1.0')
    implementation 'com.huawei.agconnect:agconnect-core:1.5.2.300'   
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
